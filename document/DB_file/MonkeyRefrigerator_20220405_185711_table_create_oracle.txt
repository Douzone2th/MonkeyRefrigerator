-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- UserJob Table Create SQL
CREATE TABLE UserJob
(
    id      INT             NOT NULL, 
    name    VARCHAR2(20)    NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE UserJob_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER UserJob_AI_TRG
BEFORE INSERT ON UserJob 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT UserJob_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER UserJob_AI_TRG;
/

--DROP SEQUENCE UserJob_SEQ;
/

COMMENT ON TABLE UserJob IS '회원 - 직업'
/

COMMENT ON COLUMN UserJob.id IS '직업 고유 번호'
/

COMMENT ON COLUMN UserJob.name IS '직업명'
/


-- BoardTime Table Create SQL
CREATE TABLE BoardTime
(
    id      INT              NOT NULL, 
    time    VARCHAR2(100)    NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE BoardTime_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BoardTime_AI_TRG
BEFORE INSERT ON BoardTime 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BoardTime_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER BoardTime_AI_TRG;
/

--DROP SEQUENCE BoardTime_SEQ;
/

COMMENT ON TABLE BoardTime IS '레시피 게시물 - 조리시간'
/

COMMENT ON COLUMN BoardTime.id IS '조리시간 고유번호'
/

COMMENT ON COLUMN BoardTime.time IS '조리시간'
/


-- UserAccount Table Create SQL
CREATE TABLE UserAccount
(
    id            INT             NOT NULL, 
    email         VARCHAR2(50)    NOT NULL, 
    password      VARCHAR2(50)    NOT NULL, 
    nickname      VARCHAR2(20)    NOT NULL, 
    name          VARCHAR2(20)    NOT NULL, 
    jobId         INT             NOT NULL, 
    gender        CHAR(1)         NOT NULL, 
    birthday      DATE            NOT NULL, 
    createAt      DATE            DEFAULT SYSDATE NOT NULL, 
    modifiedAt    DATE            DEFAULT SYSDATE NOT NULL, 
    isDeleted     CHAR(1)         DEFAULT 'N' NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE UserAccount_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER UserAccount_AI_TRG
BEFORE INSERT ON UserAccount 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT UserAccount_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER UserAccount_AI_TRG;
/

--DROP SEQUENCE UserAccount_SEQ;
/

COMMENT ON TABLE UserAccount IS '회원'
/

COMMENT ON COLUMN UserAccount.id IS '회원 고유번호'
/

COMMENT ON COLUMN UserAccount.email IS '회원 아이디(이메일))'
/

COMMENT ON COLUMN UserAccount.password IS '회원 비밀번호'
/

COMMENT ON COLUMN UserAccount.nickname IS '회원 닉네임'
/

COMMENT ON COLUMN UserAccount.name IS '회원 이름'
/

COMMENT ON COLUMN UserAccount.jobId IS '회원 직업'
/

COMMENT ON COLUMN UserAccount.gender IS 'w : 여성, m :남성'
/

COMMENT ON COLUMN UserAccount.birthday IS '회원 생년월일'
/

COMMENT ON COLUMN UserAccount.createAt IS '회원 생성날짜'
/

COMMENT ON COLUMN UserAccount.modifiedAt IS '회원 수정날짜'
/

COMMENT ON COLUMN UserAccount.isDeleted IS 'N: 탈퇴x,Y:탈퇴o'
/

ALTER TABLE UserAccount
    ADD CONSTRAINT FK_UserAccount_jobId_UserJob_i FOREIGN KEY (jobId)
        REFERENCES UserJob (id)
/


-- Board Table Create SQL
CREATE TABLE Board
(
    id             INT              NOT NULL, 
    userId         INT              NOT NULL, 
    title          VARCHAR2(300)    NOT NULL, 
    content        CLOB             NOT NULL, 
    difficulty     VARCHAR2(100)    NOT NULL, 
    timeId         INT              NOT NULL, 
    rank           INT              NOT NULL, 
    subMaterial    VARCHAR2(300)    NOT NULL, 
    tagName        VARCHAR2(500)    NOT NULL, 
    createAt       DATE             DEFAULT SYSDATE NOT NULL, 
    modifiedAt     DATE             DEFAULT SYSDATE NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE Board_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER Board_AI_TRG
BEFORE INSERT ON Board 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT Board_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER Board_AI_TRG;
/

--DROP SEQUENCE Board_SEQ;
/

COMMENT ON TABLE Board IS '레시피 게시물'
/

COMMENT ON COLUMN Board.id IS '게시물 고유번호'
/

COMMENT ON COLUMN Board.userId IS '회원 고유번호'
/

COMMENT ON COLUMN Board.title IS 'title'
/

COMMENT ON COLUMN Board.content IS 'Cook_step'
/

COMMENT ON COLUMN Board.difficulty IS '아무나, 초급, 중급, 고급, 신의경지'
/

COMMENT ON COLUMN Board.timeId IS '게시물 조리시간'
/

COMMENT ON COLUMN Board.rank IS '게시물 순위'
/

COMMENT ON COLUMN Board.subMaterial IS '게시물 부재료'
/

COMMENT ON COLUMN Board.tagName IS '게시물 태그명'
/

COMMENT ON COLUMN Board.createAt IS '게시물 생성날짜'
/

COMMENT ON COLUMN Board.modifiedAt IS '게시물 수정날짜'
/

ALTER TABLE Board
    ADD CONSTRAINT FK_Board_userId_UserAccount_id FOREIGN KEY (userId)
        REFERENCES UserAccount (id)
/

ALTER TABLE Board
    ADD CONSTRAINT FK_Board_timeId_BoardTime_id FOREIGN KEY (timeId)
        REFERENCES BoardTime (id)
/


-- Material_R Table Create SQL
CREATE TABLE Material_R
(
    key        VARCHAR2(100)    NOT NULL, 
    grabage    VARCHAR2(500)    NOT NULL, 
     PRIMARY KEY (key)
)
/

COMMENT ON TABLE Material_R IS '레시피 재료'
/

COMMENT ON COLUMN Material_R.key IS '재료 고유명'
/

COMMENT ON COLUMN Material_R.grabage IS '쓰레기 재료값'
/


-- BoardComentUser Table Create SQL
CREATE TABLE BoardComentUser
(
    id              INT              NOT NULL, 
    boarId          INT              NOT NULL, 
    userId          INT              NOT NULL, 
    subCommentId    INT              NOT NULL, 
    content         VARCHAR2(200)    NOT NULL, 
    createAt        DATE             DEFAULT SYSDATE NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE BoardComentUser_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BoardComentUser_AI_TRG
BEFORE INSERT ON BoardComentUser 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BoardComentUser_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER BoardComentUser_AI_TRG;
/

--DROP SEQUENCE BoardComentUser_SEQ;
/

COMMENT ON TABLE BoardComentUser IS '레시피 게시물 - 댓글'
/

COMMENT ON COLUMN BoardComentUser.id IS '댓글 고유번호'
/

COMMENT ON COLUMN BoardComentUser.boarId IS '게시물 고유번호'
/

COMMENT ON COLUMN BoardComentUser.userId IS '회원 고유번호'
/

COMMENT ON COLUMN BoardComentUser.subCommentId IS '대댓글 고유번호'
/

COMMENT ON COLUMN BoardComentUser.content IS '댓글 내용'
/

COMMENT ON COLUMN BoardComentUser.createAt IS '댓글 생성날짜'
/

ALTER TABLE BoardComentUser
    ADD CONSTRAINT FK_BoardComentUser_boarId_Boar FOREIGN KEY (boarId)
        REFERENCES Board (id)
/

ALTER TABLE BoardComentUser
    ADD CONSTRAINT FK_BoardComentUser_userId_User FOREIGN KEY (userId)
        REFERENCES UserAccount (id)
/


-- UserGetMaterial Table Create SQL
CREATE TABLE UserGetMaterial
(
    id             INT              NOT NULL, 
    userId         INT              NOT NULL, 
    materialKey    VARCHAR2(100)    NOT NULL, 
    createAt       DATE             DEFAULT SYSDATE NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE UserGetMaterial_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER UserGetMaterial_AI_TRG
BEFORE INSERT ON UserGetMaterial 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT UserGetMaterial_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER UserGetMaterial_AI_TRG;
/

--DROP SEQUENCE UserGetMaterial_SEQ;
/

COMMENT ON TABLE UserGetMaterial IS '회원- 가지고있는 - 재료'
/

COMMENT ON COLUMN UserGetMaterial.id IS '회원이 가지고 있는 재료 고유번호'
/

COMMENT ON COLUMN UserGetMaterial.userId IS '회원 고유번호'
/

COMMENT ON COLUMN UserGetMaterial.materialKey IS '재료 고유명'
/

COMMENT ON COLUMN UserGetMaterial.createAt IS '생성날짜'
/

ALTER TABLE UserGetMaterial
    ADD CONSTRAINT FK_UserGetMaterial_userId_User FOREIGN KEY (userId)
        REFERENCES UserAccount (id)
/

ALTER TABLE UserGetMaterial
    ADD CONSTRAINT FK_UserGetMaterial_materialKey FOREIGN KEY (materialKey)
        REFERENCES Material_R (key)
/


-- BoardGetMaterial Table Create SQL
CREATE TABLE BoardGetMaterial
(
    id         INT              NOT NULL, 
    boardId    INT              NOT NULL, 
    name       VARCHAR2(200)    NOT NULL, 
    count      VARCHAR2(200)    NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE BoardGetMaterial_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BoardGetMaterial_AI_TRG
BEFORE INSERT ON BoardGetMaterial 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BoardGetMaterial_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER BoardGetMaterial_AI_TRG;
/

--DROP SEQUENCE BoardGetMaterial_SEQ;
/

COMMENT ON TABLE BoardGetMaterial IS '레시피 게시물 - 재료'
/

COMMENT ON COLUMN BoardGetMaterial.id IS '게시물이 가지고 있는 재료 고유번호'
/

COMMENT ON COLUMN BoardGetMaterial.boardId IS '게시물 고유번호'
/

COMMENT ON COLUMN BoardGetMaterial.name IS '재료명'
/

COMMENT ON COLUMN BoardGetMaterial.count IS '재료 수량'
/

ALTER TABLE BoardGetMaterial
    ADD CONSTRAINT FK_BoardGetMaterial_boardId_Bo FOREIGN KEY (boardId)
        REFERENCES Board (id)
/


-- BoardCartUser Table Create SQL
CREATE TABLE BoardCartUser
(
    id          INT     NOT NULL, 
    boardId     INT     NOT NULL, 
    userId      INT     NOT NULL, 
    createAt    DATE    DEFAULT SYSDATE NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE BoardCartUser_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BoardCartUser_AI_TRG
BEFORE INSERT ON BoardCartUser 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BoardCartUser_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER BoardCartUser_AI_TRG;
/

--DROP SEQUENCE BoardCartUser_SEQ;
/

COMMENT ON TABLE BoardCartUser IS '레시피 게시물 - 장바구니 - 회원'
/

COMMENT ON COLUMN BoardCartUser.id IS '장바구니 고유번호'
/

COMMENT ON COLUMN BoardCartUser.boardId IS '게시물 고유번호'
/

COMMENT ON COLUMN BoardCartUser.userId IS '회원 고유번호'
/

COMMENT ON COLUMN BoardCartUser.createAt IS '장바구니 생성날짜'
/

ALTER TABLE BoardCartUser
    ADD CONSTRAINT FK_BoardCartUser_boardId_Board FOREIGN KEY (boardId)
        REFERENCES Board (id)
/

ALTER TABLE BoardCartUser
    ADD CONSTRAINT FK_BoardCartUser_userId_UserAc FOREIGN KEY (userId)
        REFERENCES UserAccount (id)
/


-- BoardSubComentUser Table Create SQL
CREATE TABLE BoardSubComentUser
(
    id           INT              NOT NULL, 
    userId       INT              NOT NULL, 
    commentId    INT              NOT NULL, 
    content      VARCHAR2(200)    NOT NULL, 
    createAt     DATE             DEFAULT SYSDATE NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE BoardSubComentUser_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BoardSubComentUser_AI_TRG
BEFORE INSERT ON BoardSubComentUser 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BoardSubComentUser_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER BoardSubComentUser_AI_TRG;
/

--DROP SEQUENCE BoardSubComentUser_SEQ;
/

COMMENT ON TABLE BoardSubComentUser IS '댓글 - 대 댓글'
/

COMMENT ON COLUMN BoardSubComentUser.id IS '대댓글고유번호'
/

COMMENT ON COLUMN BoardSubComentUser.userId IS '회원 고유번호'
/

COMMENT ON COLUMN BoardSubComentUser.commentId IS '댓글(부모) 고유번호'
/

COMMENT ON COLUMN BoardSubComentUser.content IS '대댓글 내용'
/

COMMENT ON COLUMN BoardSubComentUser.createAt IS '대댓글 생성날짜'
/

ALTER TABLE BoardSubComentUser
    ADD CONSTRAINT FK_BoardSubComentUser_userId_U FOREIGN KEY (userId)
        REFERENCES UserAccount (id)
/

ALTER TABLE BoardSubComentUser
    ADD CONSTRAINT FK_BoardSubComentUser_commentI FOREIGN KEY (commentId)
        REFERENCES BoardComentUser (id)
/


-- BoardLikeUser Table Create SQL
CREATE TABLE BoardLikeUser
(
    id          INT     NOT NULL, 
    boardId     INT     NOT NULL, 
    userId      INT     NOT NULL, 
    createAt    DATE    DEFAULT SYSDATE NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE BoardLikeUser_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BoardLikeUser_AI_TRG
BEFORE INSERT ON BoardLikeUser 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BoardLikeUser_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER BoardLikeUser_AI_TRG;
/

--DROP SEQUENCE BoardLikeUser_SEQ;
/

COMMENT ON COLUMN BoardLikeUser.id IS '좋아요 고유번호'
/

COMMENT ON COLUMN BoardLikeUser.boardId IS '게시물 고유번호'
/

COMMENT ON COLUMN BoardLikeUser.userId IS '회원 고유번호'
/

COMMENT ON COLUMN BoardLikeUser.createAt IS '좋아요 생성날짜'
/

ALTER TABLE BoardLikeUser
    ADD CONSTRAINT FK_BoardLikeUser_userId_UserAc FOREIGN KEY (userId)
        REFERENCES UserAccount (id)
/

ALTER TABLE BoardLikeUser
    ADD CONSTRAINT FK_BoardLikeUser_boardId_Board FOREIGN KEY (boardId)
        REFERENCES Board (id)
/


-- BoardImage Table Create SQL
CREATE TABLE BoardImage
(
    id            INT              NOT NULL, 
    boardId       INT              NOT NULL, 
    path          VARCHAR2(255)    NOT NULL, 
    type          VARCHAR2(255)    NOT NULL, 
    imageSize     VARCHAR2(255)    NOT NULL, 
    createAt      DATE             DEFAULT SYSDATE NOT NULL, 
    modifiedAt    DATE             DEFAULT SYSDATE NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE BoardImage_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BoardImage_AI_TRG
BEFORE INSERT ON BoardImage 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BoardImage_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER BoardImage_AI_TRG;
/

--DROP SEQUENCE BoardImage_SEQ;
/

COMMENT ON TABLE BoardImage IS '레시피 게시물 - 다중이미지'
/

COMMENT ON COLUMN BoardImage.id IS '이미지 고유번호'
/

COMMENT ON COLUMN BoardImage.boardId IS '게시물 고유번호'
/

COMMENT ON COLUMN BoardImage.path IS '이미지 경로'
/

COMMENT ON COLUMN BoardImage.type IS '이미지 타입'
/

COMMENT ON COLUMN BoardImage.imageSize IS '이미지 용량'
/

COMMENT ON COLUMN BoardImage.createAt IS '이미지 생성날짜'
/

COMMENT ON COLUMN BoardImage.modifiedAt IS '이미지 수정날짜'
/

ALTER TABLE BoardImage
    ADD CONSTRAINT FK_BoardImage_boardId_Board_id FOREIGN KEY (boardId)
        REFERENCES Board (id)
/


-- BoardVoteUser Table Create SQL
CREATE TABLE BoardVoteUser
(
    id          INT     NOT NULL, 
    boardId     INT     NOT NULL, 
    userId      INT     NOT NULL, 
    createAt    DATE    DEFAULT SYSDATE NOT NULL, 
     PRIMARY KEY (id)
)
/

CREATE SEQUENCE BoardVoteUser_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER BoardVoteUser_AI_TRG
BEFORE INSERT ON BoardVoteUser 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BoardVoteUser_SEQ.NEXTVAL
    INTO :NEW.id
    FROM DUAL;
END;
/

--DROP TRIGGER BoardVoteUser_AI_TRG;
/

--DROP SEQUENCE BoardVoteUser_SEQ;
/

COMMENT ON TABLE BoardVoteUser IS '게시물 -투표하다 -유저'
/

COMMENT ON COLUMN BoardVoteUser.id IS '투표 고유 번호'
/

COMMENT ON COLUMN BoardVoteUser.boardId IS '게시물 고유번호'
/

COMMENT ON COLUMN BoardVoteUser.userId IS '회원 고유번호'
/

COMMENT ON COLUMN BoardVoteUser.createAt IS '투표 생성 날짜'
/

ALTER TABLE BoardVoteUser
    ADD CONSTRAINT FK_BoardVoteUser_boardId_Board FOREIGN KEY (boardId)
        REFERENCES Board (id)
/

ALTER TABLE BoardVoteUser
    ADD CONSTRAINT FK_BoardVoteUser_userId_UserAc FOREIGN KEY (userId)
        REFERENCES UserAccount (id)
/


